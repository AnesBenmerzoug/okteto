version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache: 
          keys:
            - v1-pkg-cache
      - run: make test
      - run: env VERSION_STRING=$CIRCLE_TAG make -j 3 build-all
      - run: env VERSION_STRING=$CIRCLE_TAG make latest
      - persist_to_workspace:
          root: .
          paths:
            - bin
      - save_cache:
          key: v1-pkg-cache
          paths:
            - ~/.cache/go-build
      - store_artifacts:
          path: bin
          destination: binaries
  integration:
    docker:
      - image: okteto/desk:latest
    steps:
      - checkout
      - restore_cache: 
          keys:
            - v1-pkg-cache
      - attach_workspace:
          at: ./artifacts
      - run: 
          name: integration tests
          command: |
            export OKTETO_USER=cindylopez
            export OKTETO_PATH=$(pwd)/artifacts/bin/okteto-Linux-x86_64
            mkdir -p $HOME/.okteto
            touch $HOME/.okteto/.noanalytics
            echo $HOME
            make integration
      - save_cache:
          key: v1-pkg-cache
          paths:
            - ~/.cache/go-build
      - store_artifacts:
          path: /home/circleci/.okteto/okteto.log
          
  mock-publish-github-release:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - deploy:
          name: "Update brew formula"
          command: |
            sha=$(cat ./artifacts/bin/okteto-Darwin-x86_64.sha256 | awk '{print $1}')
            bash ./update_homebrew_formula.sh 0.0.1 $GITHUB_TOKEN $sha 1

  release:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ./artifacts
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          
          gsutil -m -h x-goog-meta-version:${TAG} rsync ./artifacts/bin gs://downloads.okteto.com/cli/${CIRCLE_TAG}
          
          echo "${TAG}" > latest
          gsutil -m -h x-goog-meta-version:${TAG} rsync ./artifacts/bin gs://downloads.okteto.com/cli
        
          
          # legacy
          gsutil -h x-goog-meta-version:${TAG} cp ./artifacts/bin/okteto-Darwin-x86_64 gs://downloads.okteto.com/cli/okteto-Darwin-x86_64
          gsutil -h x-goog-meta-version:${TAG} cp ./artifacts/bin/okteto-Darwin-x86_64 gs://downloads.okteto.com/cli/cli/okteto-darwin-amd64
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get -u github.com/tcnksm/ghr
            ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -token $GITHUB_TOKEN -replace -prerelease $CIRCLE_TAG  ./artifacts/bin/
      - deploy:
          name: "Update brew formula"
          command: |
            sha=$(cat ./artifacts/bin/okteto-Darwin-x86_64.sha256 | awk '{print $1}')
            bash ./update_homebrew_formula.sh $CIRCLE_TAG $GITHUB_TOKEN $sha 0
  release-master:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ./artifacts
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gsutil -h x-goog-meta-version:${CIRCLE_SHA1} -m rsync -r ./artifacts/bin gs://downloads.okteto.com/cli/master
workflows:
  version: 2
  build-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - integration:
          requires:
            - build
          filters:
            branches:
              only: 
                - master
      - release-master:
          requires:
            - integration
          filters:
            branches:
              only: master
      - mock-publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - release-master:
          requires:
            - build
          filters:
            branches:
              only: publish-to-gcp
      
